<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
        <title>Home</title>
        <style>
            body {
                background-color: #343a40;
                color: #dee2e6;
                font-family: 'Arial', sans-serif;
            }

            .navbar {
                background-color: #212529;
            }

            .navbar-brand,
            .navbar-text {
                color: #f8f9fa !important;
            }

            .custom-modal-content {
                background-color: #343a40;
                color: #dee2e6;
            }

            .custom-modal-header {
                background-color: #212529;
                color: #f8f9fa;
            }

            .close {
                color: #f8f9fa;
                cursor: pointer;
            }

            .container {
                margin-top: 20px;
            }

            table {
                width: 100%;
                margin-top: 20px;
                background-color: #212529;
                color: #f8f9fa;
            }

            th,
            td {
                text-align: center;
                padding: 8px;
                color: #f8f9fa;
                /* Set font color to white */
            }

            th {
                background-color: #007bff;
                color: #f8f9fa;
            }

            .edit-btn,
            .delete-btn {
                color: #007bff;
                cursor: pointer;
            }

            .add-btn,
            .logout-btn {
                color: #f8f9fa;
                cursor: pointer;
            }

            .add-btn {
                margin-top: 20px;
            }

            .add-btn-container {
                margin-bottom: 20px;
            }
        </style>
    </head>

    <body>

        <nav class="navbar navbar-expand-lg navbar-dark">
            <a class="navbar-brand" href="/">Movie App</a>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <span class="navbar-text mr-3">
                            Welcome, <strong><%= user.email %></strong>
                        </span>
                    </li>
                    <li class="nav-item">
                        <span class="nav-link logout-btn" onclick="logout()">Logout</span>
                    </li>
                </ul>
            </div>
        </nav>

        <div class="container">
            <div class="add-btn-container">
                <button type="button" class="btn btn-danger add-btn" onclick="openMovieModal('add')">Add New Movie</button>
            </div>
            <h2>Your Favorite Movies</h2>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Movie Name</th>
                        <th>Rating</th>
                        <th>Cast</th>
                        <th>Genre</th>
                        <th>Release Date</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
                <tbody id="movieTableBody">
                    <!-- Movie entries are dynamically added here -->
                    <% movies.forEach((movie, index) => { %>
                        <tr>
                            <td><%= movie.name %></td>
                            <td><%= movie.rating %></td>
                            <td><%= movie.cast.join(', ') %></td>
                            <td><%= movie.genre %></td>
                            <td><%= movie.releaseDate.toLocaleDateString('en-US', { day: 'numeric', month: 'long', year: 'numeric' }) %></td>
                            <td><span class="edit-btn" onclick="openMovieModal('edit', <%= JSON.stringify(movie) %>)">Edit</span></td>
                            <td><span class="delete-btn" onclick="deleteMovie(<%= JSON.stringify(movie) %>)">Delete</span></td>
                        </tr>
                    <% }); %>
                </tbody>
            </table>
        </div>

        <!-- Movie Modal -->
        <div class="modal fade" id="movieModal" tabindex="-1" role="dialog" aria-labelledby="movieModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content custom-modal-content">
                    <!-- Modal Header -->
                    <div class="modal-header custom-modal-header">
                        <h5 class="modal-title" id="movieModalLabel"></h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>

                    <!-- Modal Body -->
                    <div class="modal-body">
                        <form id="movieForm">
                            <div class="form-group">
                                <label for="movieName">Movie Name:</label>
                                <input type="text" class="form-control" id="movieName" required>
                            </div>

                            <div class="form-group">
                                <label for="rating">Rating:</label>
                                <input type="number" class="form-control" id="rating" min="0" max="10" step="0.1" required>
                            </div>

                            <div class="form-group">
                                <label for="cast">Cast (comma-separated):</label>
                                <input type="text" class="form-control" id="cast" required>
                            </div>

                            <div class="form-group">
                                <label for="genre">Genre:</label>
                                <input type="text" class="form-control" id="genre" required>
                            </div>

                            <div class="form-group">
                                <label for="releaseDate">Release Date:</label>
                                <input type="date" class="form-control" id="releaseDate" required>
                            </div>

                            <button type="submit" class="btn btn-danger" id="movieModalSubmitLabel"></button>
                            <p class="error-message" id="errorMessage"></p>
                        </form>
                    </div>
                </div>
            </div>
        </div>


        <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.1/dist/umd/popper.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

        <script>

            const movieForm = document.querySelector('form');
            let movieDbId = -1;
            const movieModalHeaderLabel = document.getElementById('movieModalLabel');
            const movieModalSubmitLabel = document.getElementById('movieModalSubmitLabel');
            const errorMessage = document.getElementById('errorMessage');

            function logout() {
                location.assign('/logout');
            }

            movieForm.addEventListener('submit', async (e) => {
                e.preventDefault();

                errorMessage.innerText = '';

                if (movieModalSubmitLabel.innerText == 'Add Movie') {
                    addMovie();
                }
                if (movieModalSubmitLabel.innerText == 'Edit Movie') {
                    editMovie();
                }
            });

            // Function to open the movie modal
            function openMovieModal(mode, movie = null) {
                if (mode == 'add') {
                    movieModalHeaderLabel.innerText = 'Add New Movie';
                    movieModalSubmitLabel.innerText = 'Add Movie';
                    movieDbId = -1;
                }
                if (mode == 'edit') {
                    movieModalHeaderLabel.innerText = 'Edit Your Movie Entry';
                    movieModalSubmitLabel.innerText = 'Edit Movie';
                    document.getElementById('movieName').value = movie.name;
                    document.getElementById('rating').value = movie.rating;
                    document.getElementById('cast').value = movie.cast;
                    document.getElementById('genre').value = movie.genre;
                    document.getElementById('releaseDate').value = movie.releaseDate;
                    movieDbId = movie.id;
                }
                $('#movieModal').modal('show');
            }

            // Function to add a new movie
            async function addMovie() {
                // Collect data from the form
                const name = $('#movieName').val();
                const rating = parseFloat($('#rating').val());
                const cast = $('#cast').val().split(',').map(c => c.trim()); // Assuming cast is a comma-separated list
                const genre = $('#genre').val();
                const releaseDate = $('#releaseDate').val();

                const movieEntry = { email: '<%= user.email %>', name, rating, cast, genre, releaseDate } 

                try {
                    const res = await fetch('/movie', {
                        method: 'POST',
                        body: JSON.stringify(movieEntry),
                        headers: {
                            'Content-Type': 'application/json'
                        } 
                    });
                    const data = await res.json();
                    console.log(data);
                    if (data.errors) {
                        errorMessage.innerText = data.errors;
                    }
                    if (data.email) {
                        location.assign('/');
                    }
                }
                catch (err) {
                    console.error(err);
                }
            }

            // Function to edit a movie entry
            async function editMovie() {
                // Collect data from the form
                const name = $('#movieName').val();
                const rating = parseFloat($('#rating').val());
                const cast = $('#cast').val().split(',').map(c => c.trim()); // Assuming cast is a comma-separated list
                const genre = $('#genre').val();
                const releaseDate = $('#releaseDate').val();

                const movieEntry = { id: movieDbId, name, rating, cast, genre, releaseDate } 

                try {
                    const res = await fetch('/movie', {
                        method: 'PUT',
                        body: JSON.stringify(movieEntry),
                        headers: {
                            'Content-Type': 'application/json'
                        } 
                    });
                    const data = await res.json();
                    console.log(data);
                    if (data.errors) {
                        errorMessage.innerText = data.errors;
                    }
                    location.assign('/');
                }
                catch (err) {
                    console.error(err);
                }
            }

            async function deleteMovie(movie) {
                try {
                    const res = await fetch('/movie', {
                        method: 'DELETE',
                        body: JSON.stringify({ id: movie.id }),
                        headers: {
                            'Content-Type': 'application/json'
                        } 
                    });
                    const data = await res.json();
                    console.log(data);
                    if (data.errors) {
                        errorMessage.innerText = data.errors;
                    }
                    location.assign('/');
                }
                catch (err) {
                    console.error(err);
                }
            } 
        </script>

    </body>

</html>